name: NBGV Prepare Release

on:
  workflow_call:
    inputs:
      target_branch:
        description: "Branch or tag to release from"
        type: string
        default: main
        required: true
      increment:                   
        description: "Version increment"
        type: string
        default: hotfix
        required: true
      version_file_path:          
        description: "Path to version.json"
        type: string
        default: version.json
        required: false

    secrets:
      GH_TOKEN:
        description: "GitHub token (falls back to github.token)"
        required: false
    outputs:                   
      tag_name:
        description: "Git tag from Nerdbank"
        value:  ${{ jobs.prep.outputs.tag }}
      semver2:
        description: "SemVer2 string"
        value:  ${{ jobs.prep.outputs.semver }}
jobs:
  prep:
    runs-on: ubuntu-latest

    outputs:
      release_branch: ${{ steps.prep_release.outputs.branch }}
      tag:            ${{ steps.version.outputs.tag }}
      semver:         ${{ steps.version.outputs.semver }}

    steps:
      - name: 📥 Checkout target
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.target_branch }}
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN || github.token }}

      - name: ⚙️ Setup .NET 9.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Install Nerdbank.GitVersioning tool (3.8.38-alpha)
        run: dotnet tool update -g nbgv --version 3.8.38-alpha || dotnet tool install -g nbgv --version 3.8.38-alpha

      - name: 📋 Configure Git identity
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: 🔖 Resolve SemVer
        id: version
        run: |
          export PATH="$PATH:$HOME/.dotnet/tools"
          semver=$(nbgv get-version --variable SemVer2)
          echo "semver=$semver" >> $GITHUB_OUTPUT
          echo "tag=v$semver"  >> $GITHUB_OUTPUT

      - name: 🏷️  Bootstrap first tag if repo is tag-less
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          if ! git tag --list | grep -q . ; then
            tag="${{ steps.version.outputs.tag }}"
            echo "No tags found – creating bootstrap tag $tag on HEAD"
            git tag "$tag" HEAD
            git push https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git "$tag"
          else
            echo "Tag(s) already exist – skipping bootstrap tag"
          fi
          
      - name: 🛠️ Prepare release
        id: prep_release
        run: |
          set -euo pipefail

          # Let Nerdbank.GitVersioning do the right thing for both flows:
          #  • On main/master/hotfix/* → patch bump, no "-alpha"  (stable)
          #  • On develop (or any other ref) → patch bump + "-alpha"
          nbgv prepare-release

          # Push the branch & tags so the Pack workflow can see them
          BR=$(git rev-parse --abbrev-ref HEAD)
          git push --set-upstream origin "$BR"
          git push origin --tags

          # Expose the branch name for downstream workflows
          echo "branch=$BR" >> "$GITHUB_OUTPUT"
          
      - name: 📝 Generate release notes
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN || github.token }}

      # 🔒 Always create & upload the notes so the Pack job can grab them  
      - name: 💾 Save notes to file
        if: always()
        run: |
          CONTENT="${{ steps.changelog.outputs.changelog || '# Initial release' }}"
          echo "$CONTENT" > release-notes.md
          ls -l release-notes.md

      - name: 📦 Upload release notes artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: release_notes
          path: release-notes.md
