name: nbgv_prepare_release

on:
  workflow_call:
    inputs:
      target_branch:
        type: string
        description: "Branch / tag to release from"
        default: main
        required: true

      increment:                    # major | minor | patch  (patch means 'revision')
        type: string
        description: "Version increment"
        default: patch
        required: true

    outputs:
      release_branch:
        description: "New release branch name"
        value: ${{ jobs.prep.outputs.release_branch }}

    secrets:
      GH_TOKEN:
        required: false      

jobs:
  prep:
    runs-on: ubuntu-latest
    env:
      DOTNET_NOLOGO: true
      GH_TOKEN: ${{ secrets.GH_TOKEN || github.token }}

    outputs:
      release_branch: ${{ steps.prepare.outputs.release_branch }}

    steps:
      # 1️⃣  Checkout caller-specified ref (caller already validated it exists)
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.target_branch }}
          fetch-depth: 0
          token: ${{ env.GH_TOKEN }}

      - name: 🔧 List local tools & NBGV version
        run: |
           dotnet tool restore
           dotnet tool list --local
           dotnet nbgv --version

      - name: 🔍 Show loaded version
        run: |
           dotnet tool restore
           dotnet nbgv get-version HEAD --format json

      # 2️⃣  .NET SDK + nbgv CLI
      - uses: actions/setup-dotnet@v4
        with: { dotnet-version: 9.0.x }
      - run: dotnet tool restore
      
    
      # 3️⃣  Run nbgv prepare-release (omit flag for patch)
      - name: 🗂️ Prepare release with explicit file & diagnostics
        id: prepare
        run: |
         # compute the parent folder of $GITHUB_WORKSPACE
          PARENT_DIR="${GITHUB_WORKSPACE%/*}"
      
          git config user.name  "release-bot"
          git config user.email "release-bot@users.noreply.github.com"
      
          INC=${{ inputs.increment }}
          case "$INC" in
            major) FLAGS="--versionIncrement major" ;;
            minor) FLAGS="--versionIncrement minor" ;;
            patch) FLAGS="" ;;  # omit flag for 'patch'
            *) echo "Invalid increment: $INC" && exit 1 ;;
          esac
      
          # point at the directory that actually contains version.json
          dotnet nbgv prepare-release --project "$PARENT_DIR" $FLAGS
          echo "release_branch=$(git rev-parse --abbrev-ref HEAD)" >> "$GITHUB_OUTPUT"
          
      # 4️⃣  Push branches & tags; open draft PR back to target_branch
      - run: |
          git push --follow-tags origin "${{ inputs.target_branch }}"
          git push --follow-tags origin "${{ steps.prepare.outputs.release_branch }}"

      - run: |
          gh pr create \
            --base "${{ inputs.target_branch }}" \
            --head "${{ steps.prepare.outputs.release_branch }}" \
            --title "📦 Release ${{ steps.prepare.outputs.release_branch }}" \
            --body  "Auto-generated release PR." \
            --draft
