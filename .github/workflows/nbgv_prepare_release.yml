name: NBGV Prepare Release

on:
  workflow_call:
    inputs:
      target_branch:
        description: "Branch or tag to release from"
        type: string
        default: main
        required: true

      increment:                     # major | minor | patch (patch → revision later)
        description: "Version increment"
        type: string
        default: patch
        required: true

      version_file_path:             # path relative to repo root
        description: "Path to version.json"
        type: string
        default: version.json
        required: false

    secrets:
      GH_TOKEN:
        description: "GitHub token (falls back to github.token)"
        required: false

    outputs:                   
      tag_name:
        description: "Git tag from Nerdbank"
        value:  ${{ jobs.prep.outputs.tag }}
      semver2:
        description: "SemVer2 string"
        value:  ${{ jobs.prep.outputs.semver }}

jobs:
  prep:
    runs-on: ubuntu-latest

    outputs:
      release_branch: ${{ steps.nbgv.outputs.BranchName }}
      tag:    ${{ steps.nbgv.outputs.tag }}
      semver: ${{ steps.nbgv.outputs.semver }}

    steps:
      # 1️⃣  Checkout the target branch / tag
      - name: 📥 Checkout target
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.target_branch }}
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN || github.token }}

      # 2️⃣  Install .NET SDK (for the nbgv tool)
      - name: ⚙️ Setup .NET 9.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      # 3️⃣  Ensure version.json exists at the given path
      - name: 🔍 Ensure version.json exists
        run: test -f "${{ inputs.version_file_path }}"

      # 4️⃣  Map "patch" -> "revision" (CLI nomenclature)
      - name: 🔄 Map patch → revision
        id: map
        run: |
          INC="${{ inputs.increment }}"
          [ "$INC" = "patch" ] && INC=revision
          echo "inc=$INC" >> "$GITHUB_OUTPUT"

      # 5️⃣  Bump version and create the release branch
      - name: 🛠️  Bump version & create branch
        id: nbgv
        uses: dotnet/nbgv@v0.4.2
        with:
          toolVersion:      3.8.38-alpha    
          versionIncrement: revision         
          firstUnstableTag: dev               
          versionFile:      version.json
          setCommonVars:    true
          
       # 6️⃣  Resolve the *exact* tag & SemVer2 produced by Nerdbank
      - name: 🔖 Resolve tag & SemVer
        id: version
        run: |
          TAG=$(dotnet nbgv get-version -v GitTagName)
          SEMVER=$(dotnet nbgv get-version -v SemVer2)
          echo "tag=$TAG"    >> "$GITHUB_OUTPUT"
          echo "semver=$SEMVER" >> "$GITHUB_OUTPUT"
          
      # 7️⃣  Build & upload release-notes.md
      - name: 📝 Generate release notes
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v5
        #with:
          # If you have a custom grouping template, point to it here.
          # configuration: .github/release-notes-config.json
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN || github.token }}

      - name: 💾 Save notes to file
        run: echo "${{ steps.changelog.outputs.changelog }}" > release-notes.md

      # Commit the notes to the release branch
      - name: 📚 Commit release-notes.md
        run: |
          git config user.name  "release-bot"
          git config user.email "release-bot@users.noreply.github.com"
          git add release-notes.md
          git commit -m "docs: add release notes for ${{ steps.version.outputs.tag }}" || echo "No change"

      - name: 📦 Upload release notes artifact
        uses: actions/upload-artifact@v4
        with:
          name: release_notes         
          path: release-notes.md
