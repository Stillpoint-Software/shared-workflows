name: Old Create Release

on:
  workflow_call:
    inputs:
      is_prerelease:
        description: 'Create a prerelease:'
        type: boolean
        required: true
        default: false
      is_draft:
        description: 'Set as a draft:'
        type: boolean
        required: true
        default: false
    secrets:
      GH_TOKEN:
        required: true

permissions:
  contents: write
  pull-requests: write
  packages: write

env:
  ALLOW_PRERELEASE: ${{ startsWith(github.ref, 'refs/heads/develop') || startsWith(github.ref, 'refs/heads/hotfix/') }}

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
    - name: Check For Valid Prerelease
      if: ${{ ( env.ALLOW_PRERELEASE == 'true' && inputs.is_prerelease == 'false' ) || ( github.ref == 'refs/heads/main' && inputs.is_prerelease == 'true' ) }}
      run: |
        echo "Prereleases should not be triggered on the main branch, please use development or hotfix"
        exit 1

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Ensure Nerdbank.GitVersioning tool is installed
      run: |
        if ! dotnet tool list -g | grep -q nbgv; then
          dotnet tool install --global nbgv
        else
          dotnet tool update --global nbgv
        fi

    - name: Get version from Nerdbank.GitVersioning
      id: nbgv
      run: |
        nbgv get-version --format json > nbgv.json
        version=$(jq -r .NuGetPackageVersion nbgv.json)
        echo "version_tag=$version" >> $GITHUB_ENV

    - name: Commit and Push Version Change
      run: |
        # Update version.json with the new version_tag
        jq --arg ver "${{ nbgv.version_tag }}" '.version = $ver' version.json > tmp_version.json && mv tmp_version.json version.json
        
        git config --global user.name '${{ github.triggering_actor }}'
        git config --global user.email '${{ github.triggering_actor }}@users.noreply.github.com'
        git add version.json
        if git diff --cached --quiet; then
          echo "No version change to commit."
        else
          git commit -m "Update version to ${{ nbgv.version_tag }} for release."
          git push
        fi

    - name: Create Release
      run: |
        echo "Creating release ${{ nbgv.version_tag }}"
        gh release create ${{ nbgv.version_tag }} \
          --target ${{ github.ref_name }} \
          --title ${{ nbgv.version_tag }} \
          --generate-notes \
          $(if [[ "${{ inputs.is_draft }}" == "true" ]]; then echo "--draft"; fi) \
          $(if [[ "${{ inputs.is_prerelease }}" == "true" ]]; then echo "--prerelease"; fi) \
          $(if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then echo "--latest"; fi)
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
