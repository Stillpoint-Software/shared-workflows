name: Create Release

on:
  workflow_call:
    inputs:
      is_prerelease:
        type: boolean
        required: true
        default: false
      is_draft:
        type: boolean
        required: true
        default: false
    secrets:
      GH_TOKEN:
        required: true

permissions:
  contents: write
  pull-requests: write
  packages: write

env:
  ALLOW_PRERELEASE: ${{ startsWith(github.ref, 'refs/heads/develop') || startsWith(github.ref, 'refs/heads/hotfix/') }}

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Validate prerelease usage
        if: ${{ ( env.ALLOW_PRERELEASE == 'true' && inputs.is_prerelease == false ) || ( github.ref == 'refs/heads/main' && inputs.is_prerelease == true ) }}
        run: |
          echo "Prereleases should not be triggered on main; use develop or hotfix/*."
          exit 1

      - name: Checkout (full history for NBGV)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0    # required by nbgv

      - name: Nerdbank.GitVersioning (install + outputs)
        id: nbgv
        uses: dotnet/nbgv@v0.4.2
        with:
          toolVersion: 3.8.38-alpha   # pin to your current CLI
          setAllVars: false           # optional: true to export NBGV_* env vars

      - name: Sanity-check release type vs computed version
        run: |
          PRE="${{ steps.nbgv.outputs.PrereleaseVersion }}"
          if [[ "${{ inputs.is_prerelease }}" == "true" && -z "$PRE" ]]; then
            echo "Requested prerelease but NBGV computed a stable version."
            exit 1
          fi
          if [[ "${{ inputs.is_prerelease }}" == "false" && -n "$PRE" ]]; then
            echo "Requested stable release but NBGV computed a prerelease ($PRE)."
            exit 1
          fi

      - name: Tag current commit with NBGV
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          nbgv tag || echo "Tag may already exist."
          git push origin "v${{ steps.nbgv.outputs.NuGetPackageVersion }}" || echo "Tag exists on remote."

      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          FLAGS=()
          [[ "${{ inputs.is_draft }}" == "true"      ]] && FLAGS+=(--draft)
          [[ "${{ inputs.is_prerelease }}" == "true" ]] && FLAGS+=(--prerelease)
          if [[ "${{ github.ref }}" == "refs/heads/main" && "${{ inputs.is_prerelease }}" != "true" ]]; then
            FLAGS+=(--latest)
          fi
          TAG="v${{ steps.nbgv.outputs.NuGetPackageVersion }}"
          echo "Creating release ${TAG}"
          gh release create "${TAG}" --title "${TAG}" --generate-notes "${FLAGS[@]}"
