name: Run Tests (reusable)

on:
  workflow_call:
    inputs:
      branch:
        required: false
        type: string
      solution_name:
        required: true
        type: string

permissions:
  contents: read
  actions: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        dotnet: [ '8.0.x', '9.0.x' ]

    env:
      SOLUTION_NAME: ${{ inputs.solution_name }}
      BRANCH_NAME:  ${{ inputs.branch || github.ref_name }}

    steps:
      - name: Checkout @ branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH_NAME }}
          fetch-depth: 0

      - name: Setup .NET ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet }}

      - name: Restore
        run: dotnet restore "${SOLUTION_NAME}"

      - name: Set Build Configuration
        run: |
          if [[ "${BRANCH_NAME}" == "main" || "${BRANCH_NAME}" == "develop" ]]; then
            echo "BUILD_CONFIGURATION=Release" >> $GITHUB_ENV
          else
            echo "BUILD_CONFIGURATION=Debug" >> $GITHUB_ENV
          fi

      - name: Build
        run: dotnet build "${SOLUTION_NAME}" --no-restore --configuration "${BUILD_CONFIGURATION}"

      - name: Test (.trx)
        run: |
          DIR="test-results-${{ startsWith(matrix.dotnet, '9.') && 'net9.0' || 'net8.0' }}"
          mkdir -p "$DIR"
          # Single run collects TRX from all test projects
          dotnet test "${SOLUTION_NAME}" \
            --no-build \
            --configuration "${BUILD_CONFIGURATION}" \
            --logger "trx;LogFileName=${DIR}.trx" \
            --results-directory "$DIR"

      - name: Upload TRX
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ startsWith(matrix.dotnet, '9.') && 'test-results-net9.0' || 'test-results-net8.0' }}
          path: |
            test-results-*/**/*.trx
          if-no-files-found: warn
          retention-days: 7
