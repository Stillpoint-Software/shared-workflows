name: template_update

on:
  workflow_call:
    inputs:
      template_repo:
        description: 'URL of the cookiecutter template repo'
        required: true
        type: string
      repo_branch:
        description: 'Branch of the project repo to update'
        required: true
        type: string

jobs:
  validate-inputs:
    runs-on: ubuntu-latest
    outputs:
      repo:   ${{ inputs.template_repo }}
      branch: ${{ inputs.repo_branch }}
    steps:
      - name: Verify template repo is reachable
        run: |
          git ls-remote "${{ inputs.template_repo }}" HEAD \
            || (echo "::error ::Cannot reach template repo '${{ inputs.template_repo }}'" && exit 1)

      - name: Checkout caller repo for branch validation
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch all remote branches
        run: |
          git fetch origin '+refs/heads/*:refs/remotes/origin/*'

      - name: Validate repo_branch exists
        run: |
          if ! git show-ref --verify --quiet "refs/remotes/origin/${{ inputs.repo_branch }}"; then
            echo "::error ::Branch '${{ inputs.repo_branch }}' not found on origin!"
            exit 1
          fi

  update-template:
    needs: validate-inputs
    runs-on: ubuntu-latest
    steps:
      # üì• Checkout project repo at provided branch
      - name: Checkout project repo at provided branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.validate-inputs.outputs.branch }}

      # üßæ Ensure .cookiecutter.json exists
      - name: Verify .cookiecutter.json exists
        run: |
          if [ ! -f .cookiecutter.json ]; then
            echo "‚ùå Missing .cookiecutter.json in project root."
            exit 1
          fi

      # üì¶ Clone the template repo
      - name: Clone cookiecutter template repo
        run: git clone "${{ needs.validate-inputs.outputs.repo }}" template-source

      # üîç Check if template has changed since last run
      - name: Get latest template SHA
        id: template_sha
        run: |
          cd template-source
          git rev-parse HEAD > ../new_template_sha
          cd ..
      - name: Compare with previous template SHA
        run: |
          if [ -f .template_version ]; then
            old_sha=$(cat .template_version)
          else
            old_sha=""
          fi
          new_sha=$(cat new_template_sha)
          if [ "$old_sha" = "$new_sha" ]; then
            echo "‚ÑπÔ∏è Template has not changed since last run. No update needed."
            exit 0
          fi
          echo "$new_sha" > .template_version
          rm new_template_sha

      # üêç Install Python & Cookiecutter
      - name: Set up Python & install Cookiecutter
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - run: pip install cookiecutter

      # üß± Install .NET 9 SDK
      - name: Set up .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      # üß† Generate project from sub-template
      - name: Determine sub-template and generate project
        id: generate
        run: |
          TEMPLATE_PATH=""
          if grep -q '"is_aspire": *"yes"' .cookiecutter.json; then
            TEMPLATE_PATH="aspire-project"
          elif grep -q '"is_docker": *"yes"' .cookiecutter.json; then
            TEMPLATE_PATH="docker-project"
          else
            echo "‚ùå No valid sub-template selected."
            exit 1
          fi
          echo "Using sub-template: $TEMPLATE_PATH"
          export COOKIECUTTER_NO_INPUT=1
          cookiecutter "template-source/$TEMPLATE_PATH" \
            --replay-file .cookiecutter.json \
            --output-dir regenerated
          mkdir -p generated-project
          mv regenerated/* generated-project

      # üîé Diff regenerated vs. current repo
      - name: Compare generated project with current repo
        id: check_diff
        run: |
          diff_output=$(diff -qr generated-project . \
              --exclude=.git \
              --exclude=generated-project \
              --exclude=template-source \
              --exclude=.cookiecutter.json || true)
          echo "$diff_output"
          echo "DIFF_FOUND=$(test -n "$diff_output" && echo true || echo false)" >> "$GITHUB_ENV"

      # üö´ Exit if no changes detected
      - name: Stop if no changes detected
        if: env.DIFF_FOUND == 'false'
        run: exit 0

      # ‚ú® Commit regenerated code on a new branch
      - name: Create and push update branch
        run: |
          rm -rf template-source
          BRANCH="template-update-$(date +%s)"
          echo "UPDATE_BRANCH=$BRANCH" >> "$GITHUB_ENV"
          git checkout -b "$BRANCH"
          if [ -d generated-project ]; then
            rsync -av --delete generated-project/ . \
              --exclude='.git' \
              --exclude='template-source' \
              --exclude='generated-project'
          fi
          rm -rf generated-project
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .template_version
          git add -A
          if ! git diff --cached --quiet; then
            git commit -m "chore: update from cookiecutter template"
            git push origin "$BRANCH"
          else
            echo "‚ÑπÔ∏è  No changes after rsync ‚Äì skipping branch push."
            git checkout -
            git branch -D "$BRANCH"
          fi

      # üõ†Ô∏è Create Pull Request
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Update from Cookiecutter Template"
          body: |
            This PR includes updates generated from the template:
            ‚Ä¢ Source  : `${{ needs.validate-inputs.outputs.repo }}`
            ‚Ä¢ Branch  : `${{ needs.validate-inputs.outputs.branch }}`
          branch: ${{ env.UPDATE_BRANCH }}
          base: ${{ needs.validate-inputs.outputs.branch }}
