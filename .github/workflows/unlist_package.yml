name: Unlist NuGet Package (Shared)

on:
  workflow_call:
    inputs:
      package_id:
        description: "NuGet package ID (e.g., MyCompany.MyLib)"
        required: true
        type: string
      package_version:
        description: "Exact version to unlist (e.g., 1.2.3 or v1.2.3-alpha-abc123)"
        required: true
        type: string
      reason:
        description: "Optional reason for audit logs"
        required: false
        type: string
      dry_run:
        description: "If true, prints the command without executing"
        required: false
        default: false
        type: boolean
    secrets:
      NUGET_API_KEY:
        required: true

permissions:
  contents: read

jobs:
  unlist:
    name: Unlist ${{ inputs.package_id }}@${{ inputs.package_version }}
    runs-on: ubuntu-latest

    env:
      PACKAGE_ID:      ${{ inputs.package_id }}
      RAW_VERSION:     ${{ inputs.package_version }}
      REASON:          ${{ inputs.reason }}
      DRY_RUN:         ${{ inputs.dry_run }}
      NUGET_SOURCE:    https://api.nuget.org/v3/index.json

    steps:
      - name: Normalize + validate version
        id: semver
        run: |
          set -euo pipefail
          raw="$RAW_VERSION"

          # Strip an optional leading 'v' or 'V'
          if [[ "$raw" =~ ^[vV] ]]; then
            norm="${raw:1}"
          else
            norm="$raw"
          fi

          # Basic SemVer 2 pattern (allows complex prerelease/build metadata)
          pattern='^[0-9]+\.[0-9]+\.[0-9]+(-[0-9A-Za-z\.-]+)?(\+[0-9A-Za-z\.-]+)?$'
          if [[ ! "$norm" =~ $pattern ]]; then
            echo "::error::'$raw' (normalized: '$norm') is not valid SemVer 2.0.0."
            exit 1
          fi

          echo "NORMALIZED_VERSION=$norm" >> "$GITHUB_ENV"
          echo "Using version: $norm"

      - name: Dry-run summary
        if: ${{ env.DRY_RUN == 'true' }}
        run: |
          echo "[DRY RUN] Would execute:"
          echo "dotnet nuget delete \"$PACKAGE_ID\" \"$NORMALIZED_VERSION\" --source \"$NUGET_SOURCE\" --api-key *** --non-interactive --force-english-output"
          exit 0

      - name: Unlist on nuget.org
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          set -euo pipefail
          echo "Unlisting ${PACKAGE_ID} ${NORMALIZED_VERSION} ..."
          dotnet nuget delete "$PACKAGE_ID" "$NORMALIZED_VERSION" \
            --source "$NUGET_SOURCE" \
            --api-key "$NUGET_API_KEY" \
            --non-interactive \
            --force-english-output
          echo "Successfully unlisted ${PACKAGE_ID} ${NORMALIZED_VERSION}"

      - name: Log reason (optional)
        if: ${{ env.REASON != '' }}
        run: echo "Reason - $REASON"
